{"version":3,"sources":["components/TodoForm.js","components/Todo.js","constant/todolistdata.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","initial_todolist","TodoList","todolistt","JSON","parse","localStorage","getItem","setTodos","test","newTodos","setItem","stringify","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.164d1fcc.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Nhập vào một việc'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Thêm việc\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;","export const initial_todolist = [{\"id\": 9521,\"text\":\"Uống nước\"},{\"id\":6409,\"text\":\"Ăn cơm\"},{\"id\":2559,\"text\":\"Chạy bộ\"},{\"id\":3997,\"text\":\"Đi ngủ\"},{\"id\":7888,\"text\":\"Đánh cầu lông\"},{\"id\":4133,\"text\":\"Đi chơi\"},{\"id\":8981,\"text\":\"Học bài\"}, {\"id\":6472,\"text\":\"Đi chợ\"}, {\"id\":1233,\"text\":\"Nghỉ ngơi, giải trí\"}, {\"id\":8999,\"text\":\"Làm đồ án cuối kì\"}]","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport {initial_todolist} from '../constant/todolistdata';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState(()=>{\r\n    const todolistt = JSON.parse(localStorage.getItem('todos'));\r\n    if (todolistt) {\r\n      return todolistt;\r\n    }\r\n    return initial_todolist;\r\n  });\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n    localStorage.setItem('todos', JSON.stringify(newTodos));\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Việc cần làm hôm nay là?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}